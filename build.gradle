/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building an application in Java.
    id 'application'
    
    // Apply jacoco plugin to generate code coverage.
    id 'jacoco'
    
    // Apply coveralls plugin to send coverage data to coveralls.io.
    id 'com.github.nbaztec.coveralls-jacoco' version "${coverallsPluginVersion}"
    
    // Plugin for generating fatjars, add shadowJar task to manage that.
    id 'com.github.johnrengelman.shadow' version "${fatjarPluginVersion}"
}

// Version, description and main class of the project.
version = '0.0.1-SNAPSHOT'
description = 'Project for ATTSD Course - Simple app to manage reservations of a guesthouse'
mainClassName = 'guesthouse.reservations.App'

java {
	// Set Java version for building the project. Setup all compile and test tasks to use the defined toolchain.
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junitJupiterApiVersion

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + junitJupiterEngineVersion
}

application {
    // Define the main class for the application, for run task.
    mainClass = 'guesthouse.reservations.App'
}

// Jar task will generate a jar file with main java class in the MANIFEST. Inherited by shadowJar task.
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

test {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

// Generate html and xml Jacoco report.
jacocoTestReport {
    reports {
        xml.enabled = true 
        html.enabled = true
    }
}
