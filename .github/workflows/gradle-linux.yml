# This workflow will build a Java project with Gradle in Linux
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle in Linux

on:
   push:
   pull_request:
   
jobs:
   build:
      runs-on: ubuntu-20.04
      
      steps:
      -  uses: actions/checkout@v2
         with:
            fetch-depth: 0
      -  name: Set up JDK 11
         uses: actions/setup-java@v2
         with:
            java-version: 11
            distribution: 'adopt'
      -  name: Cache Gradle and SonarQube packages
         uses: actions/cache@v2
         with:
            path: |
               ~/.gradle/caches
               ~/.gradle/wrapper
               ~/.sonar/cache
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/*.yml') }}
            restore-keys: |
               $(( runner.os ))-gradle-
      -  name: Grant execute permission for gradlew
         run: chmod +x gradlew
      -  name: Build with Gradle
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         run: xvfb-run ./gradlew build jacocoTestReport coverallsJacoco pitest sonarqube -i
      -  name: Archive JUnit Report
         uses: actions/upload-artifact@v2
         if: ${{ failure() }}
         with:
            name: junit-report
            path: '**/build/reports/tests/test'
      -  name: Archive PIT Report
         uses: actions/upload-artifact@v2
         if: ${{ failure() }}
         with:
            name: pit-report
            path: '**/build/reports/pitest'
      -  name: Archive jar and fatjar
         uses: actions/upload-artifact@v2
         with:
            name: guesthouse-reservations-packages
            path: '**/build/libs'
            